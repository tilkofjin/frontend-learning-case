(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{366:function(e,t,r){"use strict";r.r(t);var s=r(42),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"nestjs-documention"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nestjs-documention"}},[e._v("#")]),e._v(" Nestjs Documention")]),e._v(" "),r("h2",{attrs:{id:"introduction"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),r("p",[e._v("Nest (NestJS) is a framework for building efficient, scalable "),r("a",{attrs:{href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js"),r("OutboundLink")],1),e._v(" server-side applications. It uses progressive JavaScript, is built with and fully supports "),r("a",{attrs:{href:"https://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("TypeScript"),r("OutboundLink")],1),e._v(" (yet still enables developers to code in pure JavaScript) and combines elements of OOP (Object Oriented Programming), FP (Functional Programming), and FRP (Functional Reactive Programming).")]),e._v(" "),r("p",[e._v("Under the hood, Nest makes use of robust HTTP Server frameworks like "),r("a",{attrs:{href:"https://expressjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Express"),r("OutboundLink")],1),e._v(" (the default) and optionally can be configured to use "),r("a",{attrs:{href:"https://github.com/fastify/fastify",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fastify"),r("OutboundLink")],1),e._v(" as well!")]),e._v(" "),r("p",[e._v("Nest provides a level of abstraction above these common Node.js frameworks (Express/Fastify), but also exposes their APIs directly to the developer. This allows developers the freedom to use the myriad of third-party modules which are available for the underlying platform.")]),e._v(" "),r("h2",{attrs:{id:"installation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),r("p",[e._v("To get started, you can either scaffold the project with the "),r("a",{attrs:{href:"https://docs.nestjs.com/cli/overview",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nest CLI"),r("OutboundLink")],1),e._v(", or clone a starter project (both will produce the same outcome).")]),e._v(" "),r("p",[e._v("To scaffold the project with the Nest CLI, run the following commands. This will create a new project directory, and populate the directory with the initial core Nest files and supporting modules, creating a conventional base structure for your project. Creating a new project with the Nest CLI is recommended for first-time users. We'll continue with this approach in "),r("a",{attrs:{href:"https://docs.nestjs.com/first-steps",target:"_blank",rel:"noopener noreferrer"}},[e._v("First Steps"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("  $ "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i -g @nestjs/cli\n  $ nest new project-name\n")])])]),r("h2",{attrs:{id:"first-steps"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#first-steps"}},[e._v("#")]),e._v(" First steps")]),e._v(" "),r("p",[e._v("Please make sure that "),r("a",{attrs:{href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js"),r("OutboundLink")],1),e._v(" (>= 10.13.0) is installed on your operating system.")]),e._v(" "),r("h3",{attrs:{id:"setup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#setup"}},[e._v("#")]),e._v(" Setup")]),e._v(" "),r("p",[e._v("Setting up a new project is quite simple with the "),r("a",{attrs:{href:"https://docs.nestjs.com/cli/overview",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nest CLI"),r("OutboundLink")],1),e._v(". With "),r("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("npm"),r("OutboundLink")],1),e._v(" installed, you can create a new Nest project with the following commands in your OS terminal:")]),e._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("$ "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i -g @nestjs/cli\n$ nest new project-name\n")])])]),r("p",[e._v("The "),r("code",[e._v("project")]),e._v(" directory will be created, node modules and a few other boilerplate files will be installed, and a src/ directory will be created and populated with several core files.")]),e._v(" "),r("h3",{attrs:{id:"running-the-application"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#running-the-application"}},[e._v("#")]),e._v(" Running the application")]),e._v(" "),r("p",[e._v("Once the installation process is complete, you can run the following command at your OS command prompt to start the application listening for inbound HTTP requests:")]),e._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run start\n")])])]),r("p",[e._v("This command starts the app with the HTTP server listening on the port defined in the src/main.ts file. Once the application is running, open your browser and navigate to http://localhost:3000/. You should see the Hello World! message.")]),e._v(" "),r("hr"),e._v(" "),r("p",[e._v("If you want to try it, please refer to the official documentation for more detailed "),r("a",{attrs:{href:"https://docs.nestjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("documentation"),r("OutboundLink")],1),e._v(" ðŸ“š")])])}),[],!1,null,null,null);t.default=a.exports}}]);