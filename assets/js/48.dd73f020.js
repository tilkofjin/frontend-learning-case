(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{403:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"队列介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列介绍"}},[t._v("#")]),t._v(" 队列介绍")]),t._v(" "),a("p",[t._v("队列是一种强大的设计模式，可以帮助您应对常见的应用程序扩展和性能挑战。队列可以帮助您解决的一些问题示例如下：")]),t._v(" "),a("ul",[a("li",[t._v("消除处理高峰。例如，如果用户可以在任意时间启动资源密集型任务，则可以将这些任务添加到队列中，而不是同步执行它们。然后，您可以使工作进程以受控方式从队列中提取任务。您可以轻松添加新的 "),a("code",[t._v("Queue")]),t._v(" 使用者，以在应用程序扩展时扩展后端任务处理。")]),t._v(" "),a("li",[t._v("分解可能会阻塞 "),a("code",[t._v("Node.js")]),t._v(" 事件循环的整体任务。例如，如果用户请求需要诸如音频代码转换之类的 "),a("code",[t._v("CPU")]),t._v(" 密集型工作，则可以将此任务委派给其他进程，从而释放面向用户的进程以保持响应速度。")]),t._v(" "),a("li",[t._v("提供跨各种服务的可靠通信渠道。例如，您可以在一个流程或服务中将任务(作业)排队，而在另一流程或服务中使用它们。可以通过任何进程或服务在作业生命周期中完成，错误或其他状态更改时(通过侦听状态事件)通知您。当队列生产者或使用者失败时，它们的状态将保留，并且在重新启动节点时任务处理可以自动重新启动。")])]),t._v(" "),a("p",[a("code",[t._v("Nest")]),t._v(" 提供了 "),a("code",[t._v("@nestjs/bull")]),t._v(" 软件包，作为 "),a("code",[t._v("Bull")]),t._v(" 之上的抽象/包装器，"),a("a",{attrs:{href:"https://github.com/OptimalBits/bull",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("Bull")]),a("OutboundLink")],1),t._v(" 是流行的，受到良好支持的高性能基于 "),a("code",[t._v("Node.js")]),t._v(" 的 "),a("code",[t._v("Queue")]),t._v(" 系统实现。该软件包使以嵌套友好的方式轻松将 "),a("code",[t._v("Bull Queue")]),t._v(" 集成到您的应用程序中。")]),t._v(" "),a("p",[a("code",[t._v("Bull")]),t._v(" 使用"),a("a",{attrs:{href:"https://redis.io/",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("Redis")]),a("OutboundLink")],1),t._v(" 来保留作业数据，因此您需要在系统上安装 "),a("code",[t._v("Redis")]),t._v("。因为它是 "),a("code",[t._v("Redis")]),t._v(" 支持的，所以您的 "),a("code",[t._v("Queue")]),t._v(" 体系结构可以是完全分布式的且与平台无关。例如，您可以在一个(或几个)节点上的 "),a("code",[t._v("Nest")]),t._v(" 中运行一些 "),a("code",[t._v("Queue")]),t._v(" "),a("a",{attrs:{href:"https://docs.nestjs.com/techniques/queues#producers",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("producers(生产者)")]),a("OutboundLink")],1),t._v("，"),a("a",{attrs:{href:"https://docs.nestjs.com/techniques/queues#consumers",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("consumers(消费者)")]),a("OutboundLink")],1),t._v("和"),a("a",{attrs:{href:""}},[a("font",{attrs:{color:"red"}},[t._v("listeners(侦听器)")])],1),t._v("，并在其他网络节点上的其他 "),a("code",[t._v("Node.js")]),t._v(" 平台上运行其他生产者，消费者和侦听器。")]),t._v(" "),a("p",[t._v("本章介绍 "),a("code",[t._v("@nestjs/bull")]),t._v(" 软件包。我们还建议阅读"),a("a",{attrs:{href:"https://github.com/OptimalBits/bull/blob/master/REFERENCE.md",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("Bull文档")]),a("OutboundLink")],1),t._v("以获取更多背景信息和特定的实现细节。")]),t._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("要开始使用它，我们首先安装所需的依赖项。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save @nestjs/bull bull\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save-dev @types/bull\n")])])]),a("p",[t._v("安装过程完成后，我们可以将 "),a("code",[t._v("BullModule")]),t._v(" 导入到根 "),a("code",[t._v("AppModule")]),t._v(" 中。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("官方示例")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("app.module.ts\n")])])])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Module "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" BullModule "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/bull'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  imports"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    BullModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'audio'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      redis"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'localhost'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppModule")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("registerQueue()")]),t._v(" 方法用于实例化、注册队列。队列在使用相同凭据连接到相同基础 "),a("code",[t._v("Redis")]),t._v(" 数据库的模块和进程之间共享。每个队列通过其 "),a("code",[t._v("name")]),t._v(" 属性都是唯一的(请参见下文)。当共享队列(跨模块/进程)时，要运行的第一个 "),a("code",[t._v("registerQueue()")]),t._v(" 方法实例化队列并为该模块注册队列。其他模块(在相同或单独的进程中)只需注册队列。队列注册会创建一个注入令牌，该令牌可用于访问给定 "),a("code",[t._v("Nest")]),t._v(" 模块中的队列。")]),t._v(" "),a("p",[t._v("对于每个队列，传递一个包含以下属性的配置对象：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("name：string")]),t._v(" - 队列名称，将用作注入令牌(用于将队列注入到控制器/提供程序中)，以及用作装饰器的参数，以将使用者类和侦听器与队列相关联。")]),t._v(" "),a("li",[a("code",[t._v("limiter: RateLimiter")]),t._v(" - 用于控制队列作业的处理速率的选项。有关更多信息，请参见"),a("a",{attrs:{href:"https://github.com/OptimalBits/bull/blob/master/REFERENCE.md#queue",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("RateLimiter")]),a("OutboundLink")],1),t._v("。可选。")]),t._v(" "),a("li",[a("code",[t._v("redis: RedisOpts")]),t._v(" - 用于配置 "),a("code",[t._v("Redis")]),t._v(" 连接的选项。有关更多信息，请参见"),a("a",{attrs:{href:"https://github.com/OptimalBits/bull/blob/master/REFERENCE.md#queue",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("RedisOpts")]),a("OutboundLink")],1),t._v("。可选。")]),t._v(" "),a("li",[a("code",[t._v("prefix: string")]),t._v(" - 所有队列键的前缀。可选。")]),t._v(" "),a("li",[a("code",[t._v("defaultJobOptions: JobOpts")]),t._v(" - 用于控制新作业的默认设置的选项。有关更多信息，请参见"),a("a",{attrs:{href:"https://github.com/OptimalBits/bull/blob/master/REFERENCE.md#queueadd",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("JobOpts")]),a("OutboundLink")],1),t._v("。可选。")]),t._v(" "),a("li",[a("code",[t._v("settings: AdvancedSettings")]),t._v(" - 高级队列配置设置。这些通常不应更改。有关更多信息，请参见"),a("a",{attrs:{href:"https://github.com/OptimalBits/bull/blob/master/REFERENCE.md#queue",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("AdvancedSettings")]),a("OutboundLink")],1),t._v("。可选。")])]),t._v(" "),a("p",[t._v("如前所述，"),a("code",[t._v("name")]),t._v(" 属性是必需的。其余选项是可选的，可提供对队列行为的详细控制。这些直接传递给 "),a("code",[t._v("Bull Queue")]),t._v(" 构造函数。"),a("a",{attrs:{href:"https://github.com/OptimalBits/bull/blob/master/REFERENCE.md#queue",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("在此")]),a("OutboundLink")],1),t._v("处详细了解这些选项。在第二个或后续模块中注册队列时，最佳做法是从配置对象中忽略除 "),a("code",[t._v("name")]),t._v(" 属性之外的所有选项。仅应在实例化队列的模块中指定这些选项。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("通过将多个逗号分隔的配置对象传递给 "),a("code",[t._v("registerQueue()")]),t._v(" 方法来创建多个队列。")])]),t._v(" "),a("p",[t._v("由于作业保留在 "),a("code",[t._v("Redis")]),t._v(" 中，因此每次实例化特定的命名队列时(例如，启动/重新启动应用程序时)，它都会尝试处理以前未完成的会话中可能存在的所有旧作业。")]),t._v(" "),a("p",[t._v("每个队列可以有一个或多个 "),a("code",[t._v("producers(生产者)")]),t._v("，"),a("code",[t._v("consumers(消费者)")]),t._v("和"),a("code",[t._v("listeners(侦听器)")]),t._v("。使用者以特定顺序从队列中检索作业：FIFO（默认），LIFO或根据优先级。"),a("a",{attrs:{href:"https://docs.nestjs.com/techniques/queues#consumers",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("这里")]),a("OutboundLink")],1),t._v("讨论控制队列处理顺序。")]),t._v(" "),a("h2",{attrs:{id:"producers-生产者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#producers-生产者"}},[t._v("#")]),t._v(" "),a("code",[t._v("Producers")]),t._v(" -- 生产者")]),t._v(" "),a("p",[t._v("作业生产者将作业添加到队列中。生产者通常是应用程序服务("),a("a",{attrs:{href:"https://docs.nestjs.com/providers",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("Nest providers")]),a("OutboundLink")],1),t._v(")。要将作业添加到队列，请首先将队列注入服务中，如下所示：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Injectable "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Queue "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bull'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" InjectQueue "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/bull'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Injectable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AudioService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("InjectQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'audio'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" audioQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Queue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[a("code",[t._v("@InjectQueue()")]),t._v(" 装饰器通过其名称来标识队列，如 "),a("code",[t._v("registerQueue()")]),t._v(" 方法调用中所提供的那样(例如'"),a("code",[t._v("audio")]),t._v("')。")])]),t._v(" "),a("p",[t._v("现在，通过调用队列的 "),a("code",[t._v("add()")]),t._v(" 方法并传递用户定义的作业对象来添加作业。作业表示为可序列化的 "),a("code",[t._v("JavaScript")]),t._v(" 对象(因为这是它们在 "),a("code",[t._v("Redis")]),t._v(" 数据库中的存储方式)。您通过的工作形状是任意的；用它来表示作业对象的含义。")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("audioQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"命名任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名任务"}},[t._v("#")]),t._v(" 命名任务")]),t._v(" "),a("p",[t._v("任务可能具有唯一的名称。这使您可以创建专门的"),a("a",{attrs:{href:"https://docs.nestjs.com/techniques/queues#consumers",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("consumers(消费者)")]),a("OutboundLink")],1),t._v("，该使用者将仅处理具有给定名称的任务。")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("audioQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'transcode'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("使用命名任务时，必须为添加到队列中的每个唯一名称创建处理器，否则队列将抱怨您缺少给定任务的处理器。有关使用命名作业的更多信息，请参见"),a("a",{attrs:{href:"https://docs.nestjs.com/techniques/queues#consumers",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("此处")]),a("OutboundLink")],1),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"任务选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务选项"}},[t._v("#")]),t._v(" 任务选项")]),t._v(" "),a("p",[t._v("任务可以具有与之关联的其他选项。在 "),a("code",[t._v("Queue.add()")]),t._v(" 方法中的 "),a("code",[t._v("job")]),t._v(" 参数之后传递选项对象。作业选项属性为：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("priority: number")]),t._v(" - 可选的优先级值。范围从1(最高优先级)到 "),a("code",[t._v("MAX_INT")]),t._v(" (最低优先级)。请注意，使用优先级会对性能产生轻微影响，因此请谨慎使用它们。")]),t._v(" "),a("li",[a("code",[t._v("delay: number")]),t._v(" - 等待直到可以处理此任务的时间(毫秒)。请注意，为了获得准确的延迟，服务器和客户端都应使其时钟同步。")]),t._v(" "),a("li",[a("code",[t._v("attempts: number")]),t._v(" - 尝试完成该任务之前的总尝试次数。")]),t._v(" "),a("li",[a("code",[t._v("repeat: RepeatOpts")]),t._v(" - 根据 "),a("code",[t._v("cron")]),t._v(" 规范重复任务。请参见"),a("a",{attrs:{href:"https://github.com/OptimalBits/bull/blob/master/REFERENCE.md#queueadd",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("RepeatOpts")]),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("backoff: number | BackoffOpts")]),t._v(" - 如果任务失败，自动重试的退出设置。请参阅"),a("a",{attrs:{href:"https://github.com/OptimalBits/bull/blob/master/REFERENCE.md#queueadd",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("BackoffOpts")]),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("lifo: boolean")]),t._v(" - 如果为 "),a("code",[t._v("true")]),t._v("，则将任务添加到队列的右端而不是左侧(默认为 "),a("code",[t._v("false")]),t._v(")。")]),t._v(" "),a("li",[a("code",[t._v("timeout: number")]),t._v(" - 任务因超时错误而失败的毫秒数。")]),t._v(" "),a("li",[a("code",[t._v("jobId: number | string")]),t._v(" - 覆盖任务 "),a("code",[t._v("ID")]),t._v(" - 默认情况下，任务 "),a("code",[t._v("ID")]),t._v(" 是唯一的整数，但是您可以使用此设置覆盖它。如果使用此选项，则由您来确保 "),a("code",[t._v("jobId")]),t._v(" 是唯一的。如果尝试添加 "),a("code",[t._v("ID")]),t._v(" 已经存在的任务，则不会添加该任务。")]),t._v(" "),a("li",[a("code",[t._v("removeOnComplete: boolean | number")]),t._v(" - 如果为 "),a("code",[t._v("true")]),t._v("，则在任务成功完成时将其删除。一个数字指定要保留的任务数量。默认行为是将任务保留在完整集中。")]),t._v(" "),a("li",[a("code",[t._v("removeOnFail: boolean | number")]),t._v(" - 如果为 "),a("code",[t._v("true")]),t._v("，则在所有尝试失败后将其删除。 一个数字指定要保留的任务数量。 默认行为是将任务保留在失败集中。")]),t._v(" "),a("li",[a("code",[t._v("stackTraceLimit: number")]),t._v(" - 限制将在堆栈跟踪中记录的堆栈跟踪行的数量。")])]),t._v(" "),a("p",[t._v("以下是一些使用任务选项自定义任务的示例。")]),t._v(" "),a("p",[t._v("要延迟任务的开始，请使用 "),a("code",[t._v("delay")]),t._v(" 配置属性。")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("audioQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" delay"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3 seconds delayed")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("要将任务添加到队列的右端(将作业作为 "),a("code",[t._v("LIFO")]),t._v(" (后进先出)进行处理)，请将配置对象的 "),a("code",[t._v("lifo")]),t._v(" 属性设置为 "),a("code",[t._v("true")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("audioQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" lifo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("要确定作业的优先级，请使用 "),a("code",[t._v("priority")]),t._v(" 属性。")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("audioQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" priority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"consumers-消费者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consumers-消费者"}},[t._v("#")]),t._v(" "),a("code",[t._v("Consumers")]),t._v(" -- 消费者")]),t._v(" "),a("p",[a("code",[t._v("consumer")]),t._v(" 是一个类，定义用于处理添加到队列中的任务或侦听队列中的事件或两者的方法。使用 "),a("code",[t._v("@Processor()")]),t._v(" 装饰器声明使用者类，如下所示：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Processor "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/bull'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Processor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'audio'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AudioConsumer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v('装饰器的字符串参数(例如 "'),a("code",[t._v("audio")]),t._v('")是要与类方法关联的队列的名称。')]),t._v(" "),a("p",[t._v("在消费者类中，通过使用 "),a("code",[t._v("@Process()")]),t._v(" 装饰器装饰处理程序方法来声明任务处理程序。")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Processor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Process "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/bull'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Job "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bull'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Processor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'audio'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AudioConsumer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  @"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transcode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("job"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Job"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" progress "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      progress "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("progress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("progress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("每当消费者空闲并且队列中有要处理的任务时，就会调用修饰的方法(例如 "),a("code",[t._v("transcode()")]),t._v(")。此处理程序方法将任务对象作为其唯一参数。由处理程序方法返回的值存储在任务对象中，以后可以访问它，例如在完成事件的侦听器中访问。")]),t._v(" "),a("p",[t._v("任务对象具有多种方法，可让您与其状态进行交互。例如，以上代码使用 "),a("code",[t._v("progress()")]),t._v(" 方法更新任务的进度。有关完整的 "),a("code",[t._v("Job")]),t._v(" 对象 "),a("code",[t._v("API")]),t._v(" 参考，请参见"),a("a",{attrs:{href:"https://github.com/OptimalBits/bull/blob/master/REFERENCE.md#job",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("此处")]),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("您可以通过将名称传递给 "),a("code",[t._v("@Process()")]),t._v(" 装饰器，来指定任务处理程序方法仅处理特定类型的任务(具有特定名称的任务)，如下所示。在给定的消费者类中，可以与每个作业类型(名称)相对应的有多个 "),a("code",[t._v("@Process()")]),t._v(" 处理程序。使用命名任务时，请确保具有与每个名称相对应的处理程序。")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("@"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'transcode'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transcode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("job"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Job"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"事件监听器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件监听器"}},[t._v("#")]),t._v(" 事件监听器")]),t._v(" "),a("p",[t._v("当队列任务状态发生更改时，"),a("code",[t._v("Bull")]),t._v(" 会生成一组有用的事件。"),a("code",[t._v("Nest")]),t._v(" 提供了一组装饰器，允许订阅一组核心的标准事件。这些是从 "),a("code",[t._v("@nestjs/bull")]),t._v(" 包导出的。")]),t._v(" "),a("p",[t._v("必须在消费者类中(即，在用 "),a("code",[t._v("@Processor()")]),t._v(" 装饰器修饰的类中)声明事件侦听器。要监听事件，请使用下表中的装饰器之一声明该事件的处理程序。例如，要侦听任务在音频队列中进入活动状态时发出的事件，请使用以下构造：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Processor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Process "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@nestjs/bull'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Job "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bull'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Processor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'audio'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AudioConsumer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  @"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OnQueueActive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onActive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("job"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Job")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Processing job ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" of type ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" with data ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),a("p",[t._v("由于 "),a("code",[t._v("Bull")]),t._v(" 在分布式(多节点)环境中运行，因此它定义了事件局部性的概念。这个概念认识到事件可以完全在单个进程内触发，也可以在不同进程的共享队列上触发。本地事件是在本地进程中的队列上触发操作或状态更改时产生的事件。换句话说，当事件生产者和消费者是单个流程的本地事件时，队列中发生的所有事件都是本地事件。")]),t._v(" "),a("p",[t._v("当跨多个进程共享队列时，我们会遇到全局事件的可能性。为了使一个进程中的侦听器接收到另一个进程触发的事件通知，它必须注册一个全局事件。")]),t._v(" "),a("p",[t._v("每当发出相应的事件时，就会调用事件处理程序。使用下表中显示的签名调用处理程序，从而提供对与事件相关的信息的访问。我们在下面讨论本地和全局事件处理程序签名之间的一个关键区别。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("本地事件监听器")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("全局事件监听器")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("处理程序方法签名/触发时")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnQueueError()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnGlobalQueueError()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("handler(error: Error)")]),t._v("- 发生错误。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnQueueWaiting()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnGlobalQueueWaiting()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("handler(jobId: number | string)")]),t._v(" - 进程闲置后，任务正在等待处理。"),a("code",[t._v("jobId")]),t._v(" 包含已进入此状态的作业的 "),a("code",[t._v("ID")]),t._v("。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnQueueActive()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnGlobalQueueActive()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("handler(job: Job)")]),t._v("- 任务已经开始")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnQueueStalled()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnGlobalQueueStalled()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("handler(job: Job)")]),t._v(" - 任务被标记为已停止。这对于调试崩溃或暂停事件循环的任务进程很有用。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnQueueProgress()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnGlobalQueueProgress()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("handler(job: Job, progress: number)")]),t._v(" - 任务的进度已更新，以评估进度 "),a("code",[t._v("progress")]),t._v("。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnQueueCompleted()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnGlobalQueueCompleted()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("handler(job: Job, result: any)")]),t._v(" - 任务成功完成，结果是 "),a("code",[t._v("result")]),t._v("。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnQueueFailed()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnGlobalQueueFailed()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("handler(job: Job, err: Error)")]),t._v(" - 任务失败，原因是 "),a("code",[t._v("Error")]),t._v("。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnQueuePaused()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnGlobalQueuePaused()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("handler()")]),t._v(" - 队列已暂停。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnQueueResumed()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnGlobalQueueResumed()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("handler(job: Job)")]),t._v(" - 队列已恢复。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnQueueCleaned()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnGlobalQueueCleaned()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("handler(jobs: Job[], type: string)")]),t._v(" - 旧任务已从队列中清除。"),a("code",[t._v("jobs")]),t._v(" 是一组已清除任务，而 "),a("code",[t._v("type")]),t._v(" 是已清除作业的类型。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnQueueDrained()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnGlobalQueueDrained()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("handler()")]),t._v(" - 每当队列处理完所有等待的任务时发出(即使可能存在一些尚未处理的延迟任务)。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnQueueRemoved()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("@OnGlobalQueueRemoved()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("handler(job: Job)")]),t._v(" - 任务已成功删除。")])])])]),t._v(" "),a("p",[t._v("侦听全局事件时，方法签名可能与本地签名略有不同。具体来说，任何在本地版本中接收任务对象，而在全局版本中接收 "),a("code",[t._v("JobId")]),t._v("(数字)的方法签名。在这种情况下，要获取对实际任务对象的引用，请使用 "),a("code",[t._v("Queue＃getJob")]),t._v(" 方法。应等待此调用，因此应将处理程序声明为异步。例如：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("@"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OnGlobalQueueCompleted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onGlobalCompleted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("jobId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" job "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("immediateQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getJob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jobId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'(Global) on completed: job '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' -> result: '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("要访问 "),a("code",[t._v("Queue")]),t._v(" 对象(进行 "),a("code",[t._v("getJob()")]),t._v(" 调用)，您当然必须注入它。另外，队列必须在要注入队列的模块中注册。")])]),t._v(" "),a("p",[t._v("除了特定的事件侦听器装饰器之外，您还可以将泛型 "),a("code",[t._v("@OnQueueEvent()")]),t._v(" 装饰器与 "),a("code",[t._v("BullQueueEvents")]),t._v(" 或 "),a("code",[t._v("BullQueueGlobalEvents")]),t._v(" 枚举结合使用。在"),a("a",{attrs:{href:"https://github.com/OptimalBits/bull/blob/master/REFERENCE.md#events",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("此处")]),a("OutboundLink")],1),t._v("阅读有关事件的更多信息。")]),t._v(" "),a("h2",{attrs:{id:"队列管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列管理"}},[t._v("#")]),t._v(" 队列管理")]),t._v(" "),a("p",[t._v("队列具有一个 "),a("code",[t._v("API")]),t._v("，可让您执行管理功能，例如暂停和继续，检索各种状态下的作业计数等。您可以在"),a("a",{attrs:{href:"https://github.com/OptimalBits/bull/blob/master/REFERENCE.md#queue",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("此处")]),a("OutboundLink")],1),t._v("找到完整队列 "),a("code",[t._v("API")]),t._v("。直接在 "),a("code",[t._v("Queue")]),t._v(" 对象上调用这些方法中的任何一个，如下面的 暂停/恢复 示例所示。")]),t._v(" "),a("p",[t._v("通过 "),a("code",[t._v("pause()")]),t._v(" 方法调用暂停队列。暂停的队列在恢复之前不会处理新的任务，但是当前正在处理的任务将继续直到完成。")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" audioQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pause")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("要恢复已暂停的队列，请使用 "),a("code",[t._v("resume()")]),t._v(" 方法，如下所示：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" audioQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resume")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"异步配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步配置"}},[t._v("#")]),t._v(" 异步配置")]),t._v(" "),a("p",[t._v("您可能希望异步而不是静态地传递队列选项。在这种情况下，请使用 "),a("code",[t._v("registerQueueAsync()")]),t._v(" 方法，该方法提供了几种处理异步配置的方法。")]),t._v(" "),a("p",[t._v("一种方法是使用工厂函数：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("BullModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerQueueAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'audio'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("useFactory")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    redis"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'localhost'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("我们的工厂的行为类似于任何其他"),a("a",{attrs:{href:"https://docs.nestjs.com/fundamentals/async-providers",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("异步提供程序")]),a("OutboundLink")],1),t._v("(例如，它可以是异步的，并且能够通过注入来注入依赖项)。")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("BullModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerQueueAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'audio'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  imports"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ConfigModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("useFactory")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("configService"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ConfigService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    redis"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" configService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'QUEUE_HOST'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("configService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'QUEUE_PORT'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  inject"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ConfigService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("另外，您可以使用 "),a("code",[t._v("useClass")]),t._v(" 语法：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("BullModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerQueueAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'audio'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  useClass"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" BullConfigService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("上面的构造将实例化 "),a("code",[t._v("BullModule")]),t._v(" 中的 "),a("code",[t._v("BullConfigService")]),t._v("，并通过调用 "),a("code",[t._v("createBullOptions()")]),t._v(" 使用它来提供一个 "),a("code",[t._v("options")]),t._v(" 对象。请注意，这意味着 "),a("code",[t._v("BullConfigService")]),t._v(" 必须实现 "),a("code",[t._v("BullOptionsFactory")]),t._v(" 接口，如下所示：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("@"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Injectable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BullConfigService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BullOptionsFactory")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBullOptions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" BullModuleOptions "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      redis"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'localhost'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("为了防止在 "),a("code",[t._v("BullModule")]),t._v(" 内部创建 "),a("code",[t._v("BullConfigService")]),t._v(" 并使用从其他模块导入的提供程序，可以使用 "),a("code",[t._v("useExisting")]),t._v(" 语法。")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("BullModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerQueueAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'audio'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  imports"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ConfigModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  useExisting"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ConfigService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("此构造与 "),a("code",[t._v("useClass")]),t._v(" 相同，但有一个重要区别 - "),a("code",[t._v("BullModule")]),t._v(" 将查找导入的模块以重用现有的 "),a("code",[t._v("ConfigService")]),t._v(" 而不是实例化新的 "),a("code",[t._v("ConfigService")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/nestjs/nest/tree/master/sample/26-queues",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[t._v("这里")]),a("OutboundLink")],1),t._v("有一个工作示例。")])])}),[],!1,null,null,null);s.default=n.exports}}]);