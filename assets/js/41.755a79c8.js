(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{396:function(s,t,a){"use strict";a.r(t);var n=a(42),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"认证方式介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#认证方式介绍"}},[s._v("#")]),s._v(" 认证方式介绍")]),s._v(" "),a("p",[s._v("身份验证是大多数应用程序中必不可少的部分。有很多不同的方法和策略来处理身份验证。任何项目采用的方法取决于其特定的应用程序要求。本章介绍了几种可以适应各种不同要求的身份验证方法：")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/jaredhanson/passport",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[s._v("Passport")]),a("OutboundLink")],1),s._v("是最受欢迎的 "),a("code",[s._v("node.js")]),s._v(" 身份验证库，在社区中广为人知并成功用于许多生产应用中。使用 "),a("code",[s._v("@nestjs/passport")]),s._v(" 模块将该库与 "),a("code",[s._v("Nest")]),s._v(" 应用程序集成起来很简单。在较高级别，"),a("code",[s._v("Passport")]),s._v(" 执行一系列步骤以：")]),s._v(" "),a("ul",[a("li",[s._v('通过验证用户的 "凭据" (例如用户名/密码，JSON Web token(JWT) 或来自身份提供者的身份令牌)')]),s._v(" "),a("li",[s._v("管理身份验证状态(通过发出可移植的 token (例如JWT) 或创建 "),a("a",{attrs:{href:"https://github.com/expressjs/session",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[s._v("Express 会话")]),a("OutboundLink")],1),s._v(")")]),s._v(" "),a("li",[s._v("将有关经过身份验证的用户的信息附加到 "),a("code",[s._v("Request")]),s._v(" 对象，以在路由处理程序中进一步使用")])]),s._v(" "),a("p",[a("code",[s._v("Passport")]),s._v(" 具有丰富的策略生态系统，可实施各种身份验证机制。虽然概念上很简单，但是您可以选择的 "),a("code",[s._v("Passport")]),s._v(" 策略集很大，并且存在很多变化。"),a("code",[s._v("Passport")]),s._v(" 将这些不同的步骤抽象为标准模式，"),a("code",[s._v("@nestjs/passport")]),s._v(" 模块将该模式包装并标准化为熟悉的 "),a("code",[s._v("Nest")]),s._v(" 结构。")]),s._v(" "),a("p",[s._v("在本章中，我们将使用这些强大而灵活的模块为 "),a("code",[s._v("RESTful API")]),s._v(" 服务器实现完整的端到端身份验证解决方案。您可以使用此处描述的概念来实施任何 "),a("code",[s._v("Passport")]),s._v(" 策略以自定义身份验证方案。您可以按照本章中的步骤构建完整的示例。您可以在"),a("a",{attrs:{href:"https://github.com/nestjs/nest/tree/master/sample/19-auth-jwt",target:"_blank",rel:"noopener noreferrer"}},[s._v("此处"),a("OutboundLink")],1),s._v("找到带有完整示例应用程序的存储库。")]),s._v(" "),a("h2",{attrs:{id:"认证要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#认证要求"}},[s._v("#")]),s._v(" 认证要求")]),s._v(" "),a("p",[s._v("让我们充实我们的要求。 对于此用例，客户端将从使用用户名和密码进行身份验证开始。一旦通过身份验证，服务器将发出一个 "),a("code",[s._v("JWT")]),s._v("，该 "),a("code",[s._v("JWT")]),s._v(" 可以作为"),a("a",{attrs:{href:"https://tools.ietf.org/html/rfc6750",target:"_blank",rel:"noopener noreferrer"}},[s._v("承载令牌在后续请求中的授权标头"),a("OutboundLink")],1),s._v("中发送以证明身份验证。我们还将创建一个受保护的路由，只有包含有效 "),a("code",[s._v("JWT")]),s._v(" 的请求才能访问该路由。")]),s._v(" "),a("p",[s._v("我们将从第一个要求开始：对用户进行身份验证。然后，我们将通过发布 "),a("code",[s._v("JWT")]),s._v(" 来扩展它。最后，我们将创建一个受保护的路由，以检查请求上的有效 "),a("code",[s._v("JWT")]),s._v(" 。")]),s._v(" "),a("p",[s._v("首先，我们需要安装所需的软件包。"),a("code",[s._v("Passport")]),s._v(" 提供了称为"),a("a",{attrs:{href:"https://github.com/jaredhanson/passport-local",target:"_blank",rel:"noopener noreferrer"}},[s._v("passport-local"),a("OutboundLink")],1),s._v("的策略，该策略实现了用户名/密码身份验证机制，符合我们对用例这一部分的需求。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --save @nestjs/passport passport passport-local\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --save-dev @types/passport-local\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("对于您选择的任何 "),a("code",[s._v("Passport")]),s._v(" 策略，您将始终需要 "),a("code",[s._v("@nestjs/passport")]),s._v(" 和护照包。然后，您需要安装特定于策略的软件包(例如，"),a("code",[s._v("passport-jwt")]),s._v(" 或 "),a("code",[s._v("passport-local")]),s._v(")，以实现您要构建的特定身份验证策略。此外，您还可以为任何 "),a("code",[s._v("Passport")]),s._v(" 策略安装类型定义，如上面的 "),a("code",[s._v("@types/passport-local")]),s._v(" 所示，它在编写 "),a("code",[s._v("TypeScript")]),s._v(" 代码时提供了帮助。")])]),s._v(" "),a("h2",{attrs:{id:"实施-passport-策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实施-passport-策略"}},[s._v("#")]),s._v(" 实施 "),a("code",[s._v("Passport")]),s._v(" 策略")]),s._v(" "),a("p",[s._v("现在，我们准备实现身份验证功能。我们将首先概述用于任何 "),a("code",[s._v("Passport")]),s._v(" 策略的过程。可以将 "),a("code",[s._v("Passport")]),s._v(" 本身视为一个小型框架。该框架的优雅之处在于，它将身份验证过程抽象为您根据要实施的策略自定义的几个基本步骤。您可以通过以回调函数的形式提供自定义参数(作为纯 "),a("code",[s._v("JSON")]),s._v(" 对象)和自定义代码来进行配置。"),a("code",[s._v("@nestjs/ passport")]),s._v(" 模块将此框架包装在 "),a("code",[s._v("Nest")]),s._v(" 样式包中，从而易于集成到 "),a("code",[s._v("Nest")]),s._v(" 应用程序中。我们将在下面使用 "),a("code",[s._v("@nestjs/passport")]),s._v("，但首先让我们考虑一下 "),a("code",[s._v("Vanilla Passport")]),s._v(" 的工作原理。")]),s._v(" "),a("p",[s._v("在 "),a("code",[s._v("Vanilla Passport")]),s._v(" 中，您通过提供以下两点来配置策略：\n1、特定于该策略的一组选项。例如，在 "),a("code",[s._v("JWT")]),s._v(' 策略中，您可以提供一个秘密来对令牌进行签名。\n2、"验证回调"，您可以在其中告诉 '),a("code",[s._v("Passport")]),s._v(" 如何与用户商店进行交互(您可以在其中管理用户帐户)。在这里，您验证用户是否存在（或创建一个新用户），以及他们的凭据是否有效。如果验证成功，"),a("code",[s._v("Passport")]),s._v(" 库希望此回调返回完整的用户，如果失败，则返回 "),a("code",[s._v("null")]),s._v("(失败定义为找不到用户，或者，如果是 "),a("code",[s._v("passport-local")]),s._v("，则密码不匹配)。")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("@nestjs/passport")]),s._v("，可以通过扩展 "),a("code",[s._v("PassportStrategy")]),s._v(" 类来配置 "),a("code",[s._v("Passport")]),s._v(" 策略。通过在子类中调用 "),a("code",[s._v("super()")]),s._v(" 方法来传递策略选项(上面的项目1)，可以选择传入一个选项对象。您可以通过在子类中实现 "),a("code",[s._v("validate()")]),s._v(" 方法来提供 "),a("code",[s._v("verify")]),s._v(" 回调(上面的项目2)。")]),s._v(" "),a("p",[s._v("我们将从生成一个 "),a("code",[s._v("AuthModule")]),s._v(" 以及其中的 "),a("code",[s._v("AuthService")]),s._v(" 开始：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ nest g module auth\n$ nest g "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" auth\n")])])]),a("p",[s._v("在实现 "),a("code",[s._v("AuthService")]),s._v(" 时，我们发现将用户操作封装在 "),a("code",[s._v("UsersService")]),s._v(" 中很有用，因此，让我们现在生成该模块和服务：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ nest g module "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),s._v("\n$ nest g "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),s._v("\n")])])]),a("p",[s._v("替换这些生成文件的默认内容，如下所示。对于我们的示例应用程序，"),a("code",[s._v("UsersService")]),s._v(" 只需维护一个硬编码的内存用户列表，以及一个通过用户名检索的查找方法。在真实的应用中，您可以使用选择的库(例如 "),a("code",[s._v("TypeORM，Sequelize，Mongoose")]),s._v(" 等)在此处构建用户模型和持久层。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("官方示例")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("users/users.service.js\n")])])])]),s._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Injectable "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n@"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Injectable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UsersService")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("users "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        userId"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        username"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'john'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        password"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'changeme'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        userId"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        username"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'chris'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        password"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'secret'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        userId"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        username"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'maria'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        password"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'guess'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("findOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("user")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("username "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("在 "),a("code",[s._v("UsersModule")]),s._v(" 中，唯一需要做的更改是将 "),a("code",[s._v("UsersService")]),s._v(" 添加到 "),a("code",[s._v("@Module")]),s._v(" 装饰器的 "),a("code",[s._v("exports")]),s._v(" 数组中，以便在此模块外部可见(我们将在 "),a("code",[s._v("AuthService")]),s._v(" 中很快使用它)。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("官方示例")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("users/users.module.ts\n")])])])]),s._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Module "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" UsersService "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./users.service'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n@"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  providers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("UsersService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  exports"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("UsersService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UsersModule")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("我们的 "),a("code",[s._v("AuthService")]),s._v(" 负责检索用户并验证密码。为此，我们创建一个 "),a("code",[s._v("validateUser()")]),s._v(" 方法。在下面的代码中我们使用方便的 "),a("code",[s._v("ES6")]),s._v(" 扩张操作符(...)在返回用户对象之前从用户对象中删除 "),a("code",[s._v("password")]),s._v(" 属性。稍后，我们将从 "),a("code",[s._v("Passport")]),s._v(" 本地策略中调用 "),a("code",[s._v("validateUser()")]),s._v(" 方法。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("官方示例")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("auth/auth.service.ts\n")])])])]),s._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Injectable "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" UsersService "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'../users/users.service'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n@"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Injectable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AuthService")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" usersService"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" UsersService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("validateUser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("username"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pass"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("usersService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("findOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("password "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" pass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("result "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("当然，在实际的应用程序中，您不会以纯文本形式存储密码。取而代之的是使用带有单向哈希算法的 "),a("a",{attrs:{href:"https://github.com/kelektiv/node.bcrypt.js#readme",target:"_blank",rel:"noopener noreferrer"}},[a("font",{attrs:{color:"red"}},[s._v("bcrypt")]),a("OutboundLink")],1),s._v("之类的库。采用这种方法，您只需存储哈希密码，然后将存储的密码与输入密码的哈希版本进行比较，因此，切勿以纯文本格式存储或公开用户密码。为了使我们的示例应用程序简单，我们违反了该绝对授权，并使用纯文本。"),a("font",{attrs:{color:"red"}},[s._v("不要在您的真实应用中这样做！")])],1)]),s._v(" "),a("p",[s._v("现在，我们更新 "),a("code",[s._v("AuthModule")]),s._v(" 以导入 "),a("code",[s._v("UsersModule")]),s._v("。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("官方示例")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("auth/auth.module.ts\n")])])])]),s._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Module "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" AuthService "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./auth.service'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" UsersModule "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'../users/users.module'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n@"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  imports"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("UsersModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  providers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AuthService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AuthModule")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"在本地实施-passport"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在本地实施-passport"}},[s._v("#")]),s._v(" 在本地实施 "),a("code",[s._v("Passport")])]),s._v(" "),a("p",[s._v("现在我们可以实施我们的 "),a("code",[s._v("Passport")]),s._v(" 本地身份验证策略，在 "),a("code",[s._v("auth")]),s._v(" 文件夹中创建一个名为 "),a("code",[s._v("local.strategy.ts")]),s._v(" 的文件，并添加以下代码：")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("官方示例")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("auth/local.strategy.ts\n")])])])]),s._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Strategy "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'passport-local'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" PassportStrategy "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@nestjs/passport'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Injectable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" UnauthorizedException "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" AuthService "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./auth.service'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n@"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Injectable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalStrategy")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PassportStrategy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Strategy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" authService"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" AuthService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("validate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("username"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" password"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("authService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("validateUser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UnauthorizedException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("对于所有 "),a("code",[s._v("Passport")]),s._v(" 策略，我们都遵循了前面介绍的方法。在我们的本地护照使用案例中，没有配置选项，因此我们的构造函数只调用 "),a("code",[s._v("super()")]),s._v("，而没有选项对象。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("我们可以在对 "),a("code",[s._v("super()")]),s._v(" 的调用中传递一个 "),a("code",[s._v("options")]),s._v(" 对象，以自定义护照策略的行为。在此示例中，默认情况下，本地护照策略在请求正文中期望使用名为用户名和密码的属性。传递一个选项对象以指定不同的属性名称。例如："),a("code",[s._v("super({{usernameField：'email'})")]),s._v("。有关更多信息，请参见 "),a("code",[s._v("Passport")]),s._v(" 文档。")])]),s._v(" "),a("p",[s._v("我们还实现了 "),a("code",[s._v("validate()")]),s._v(" 方法。对于每种策略，"),a("code",[s._v("Passport")]),s._v(" 将使用适当的策略特定的参数集调用 "),a("code",[s._v("verify")]),s._v(" 函数(通过 "),a("code",[s._v("@nestjs/passport")]),s._v(" 中的 "),a("code",[s._v("validate()")]),s._v(" 方法实现)。对于本地策略，"),a("code",[s._v("Passport")]),s._v(" 希望使用带有以下签名的 "),a("code",[s._v("validate()")]),s._v(" 方法："),a("code",[s._v("validate(username: string, password:string): any")]),s._v("。")]),s._v(" "),a("p",[s._v("大多数验证工作是在我们的 "),a("code",[s._v("AuthService")]),s._v(" 中完成的(借助于 "),a("code",[s._v("UsersService")]),s._v(" 的帮助)，因此此方法非常简单。任何 "),a("code",[s._v("Passport")]),s._v(" 策略的 "),a("code",[s._v("validate()")]),s._v(" 方法将遵循类似的模式，仅在表示凭据的方式细节方面有所不同。如果找到用户并且凭据有效，返回用户，以便 "),a("code",[s._v("Passport")]),s._v(" 可以完成其任务(例如，在 "),a("code",[s._v("Request")]),s._v(" 对象上创建 "),a("code",[s._v("user")]),s._v("属性)，并且请求处理管道可以继续。如果找不到，我们将抛出一个异常并让我们的"),a("a",{attrs:{href:"https://docs.nestjs.com/exception-filters",target:"_blank",rel:"noopener noreferrer"}},[s._v("异常层"),a("OutboundLink")],1),s._v("处理它。")]),s._v(" "),a("p",[s._v("通常，每种策略的 "),a("code",[s._v("validate()")]),s._v(" 方法的唯一重要区别是您如何确定用户是否存在并有效。例如，在 "),a("code",[s._v("JWT")]),s._v(" 策略中，根据要求，我们可能会评估解码令牌中携带的 "),a("code",[s._v("userId")]),s._v(" 是否与我们的用户数据库中的记录匹配，或匹配已撤销令牌的列表。因此，这种子分类和实施策略特定验证的模式是一致，优雅且可扩展的。")]),s._v(" "),a("p",[s._v("我们需要配置 "),a("code",[s._v("AuthModule")]),s._v(" 以使用我们刚刚定义的 "),a("code",[s._v("Passport")]),s._v(" 功能。更新 "),a("code",[s._v("auth.module.ts")]),s._v(" 如下所示：")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("官方示例")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("auth/auth.module.ts\n")])])])]),s._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Module "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@nestjs/common'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" AuthService "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./auth.service'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" UsersModule "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'../users/users.module'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" PassportModule "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@nestjs/passport'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" LocalStrategy "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./local.strategy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n@"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  imports"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("UsersModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" PassportModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  providers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AuthService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" LocalStrategy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AuthModule")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"内置-passport-守卫"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置-passport-守卫"}},[s._v("#")]),s._v(" 内置 "),a("code",[s._v("passport")]),s._v(" 守卫")]),s._v(" "),a("p",[a("code",[s._v("Guards")]),s._v(" 一章介绍了 "),a("code",[s._v("Guards")]),s._v(" 的主要功能：确定请求是否将由路由处理程序处理。事实仍然如此，我们将很快使用该标准功能。但是，在使用 "),a("code",[s._v("@nestjs/passport")]),s._v(" 模块的情况下，我们还将介绍一些起初可能会引起混淆的细微新皱纹，所以现在让我们进行讨论。从身份验证的角度考虑，您的应用可以处于两种状态：\n1、用户/客户端未登录(未认证)\n2、用户/客户端已登录(已验证)")]),s._v(" "),a("p",[s._v("在第一种情况下(用户未登录)，我们需要执行两个不同的功能：")]),s._v(" "),a("ul",[a("li",[s._v("限制未经身份验证的用户可以访问的路由(即拒绝访问受限制的路由)。通过将 "),a("code",[s._v("Guard")]),s._v(" 放在受保护的路由上，我们将以其熟悉的能力使用 "),a("code",[s._v("Guards")]),s._v(" 来处理此功能。如您所料，我们将检查此 "),a("code",[s._v("Guard")]),s._v(" 中是否存在有效的 "),a("code",[s._v("JWT")]),s._v("，因此，一旦我们成功发布 "),a("code",[s._v("JWT")]),s._v("，我们将在稍后使用此 "),a("code",[s._v("Guard")]),s._v("。")]),s._v(" "),a("li",[s._v("当先前未经身份验证的用户尝试登录时，初始化"),a("strong",[s._v("身份验证步骤")]),s._v("。这是我们向有效用户发出 "),a("code",[s._v("JWT")]),s._v(" 的步骤。考虑片刻，我们需要发送用户名/密码凭证才能启动身份验证，因此我们将设置 "),a("code",[s._v("POST /auth /login")]),s._v(" 路由来处理该问题。这就提出了一个问题：我们究竟如何在那条路线中调用 "),a("code",[s._v("passport-local")]),s._v(" 策略?")])]),s._v(" "),a("p",[s._v("答案很简单：通过使用另一种略有不同的 "),a("code",[s._v("Guard")]),s._v(" 类型。"),a("code",[s._v("@nestjs/passport")]),s._v(" 模块为我们提供了一个内置的 "),a("code",[s._v("Guard")]),s._v(" 来为我们执行此操作。该 "),a("code",[s._v("Guard")]),s._v(" 调用 "),a("code",[s._v("Passport")]),s._v(" 策略并启动上述步骤(检索凭据，运行验证功能，创建用户属性等)。")]),s._v(" "),a("p",[s._v("上面列举的第二种情况(登录用户)仅依赖于我们已经讨论过的 "),a("code",[s._v("Guard")]),s._v(" 的标准类型，以使登录用户能够访问受保护的路由。")]),s._v(" "),a("h2",{attrs:{id:"登陆路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#登陆路由"}},[s._v("#")]),s._v(" 登陆路由")])])}),[],!1,null,null,null);t.default=e.exports}}]);